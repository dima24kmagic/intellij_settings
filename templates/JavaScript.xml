<templateSet group="JavaScript">
  <template name="log" value="console.log($STRING$);" description="create console log text" toReformat="false" toShortenFQNames="true">
    <variable name="STRING" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="func" value="const $FUNCNAME$ = ($ARGS$) =&gt; {&#10;    $END$&#10;}" description="ES6 style function" toReformat="false" toShortenFQNames="true">
    <variable name="FUNCNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="construct" value="constructor(){&#10;    super();&#10;    $END$&#10;}" description="Create constructor for class" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rf" value="$FUNCNAME$ = ($PARAMS$) =&gt; {&#10;    $END$&#10;}" description="create class function" toReformat="false" toShortenFQNames="true">
    <variable name="FUNCNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="importdefault" value="import $ITEM$ from &quot;$START$&quot;;&#10;$END$" description="Import statement - import b from 'a'" toReformat="true" toShortenFQNames="true">
    <variable name="ITEM" expression="jsSuggestImportedEntityName()" defaultValue="Namespace" alwaysStopAt="true" />
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="import" value="import $END$ from &quot;$MODULE$&quot;;" description="Import from first" toReformat="false" toShortenFQNames="true">
    <variable name="MODULE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ecf" value="export const $FUNCNAME$ = ($PARAMS$) =&gt; {&#10;    $END$&#10;}" description="export const function" toReformat="false" toShortenFQNames="true">
    <variable name="FUNCNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ec" value="export const $CONSTNAME$" description="export const" toReformat="false" toShortenFQNames="true">
    <variable name="CONSTNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="af" value="const $FUNCNAME$ = ($PARAMS$) =&gt; {&#10;    $END$&#10;}" description="Arrow Function" toReformat="false" toShortenFQNames="true">
    <variable name="FUNCNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="aaf" value="($ARGUMENTS$) =&gt; {$END$}" description="anonymus arrow function" toReformat="false" toShortenFQNames="true">
    <variable name="ARGUMENTS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="dp" value="const {$END$} = this.props;" description="Deconstract props" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ds" value="const {$END$} = this.state" description="Deconstract State" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>